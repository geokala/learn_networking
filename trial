#! /usr/bin/env python
import cmd
from learn_network.runner import Runner
import os
import sys


class CLI(cmd.Cmd):
    def __init__(self):
        super(CLI, self).__init__()
        self.prompt = "Scenario not loaded. Use 'load' to load one> "
        self.do_load = self._load
        self.help_load = self._load_help
        self.complete_load = self._load_complete
        self.runner = Runner()

    def do_exit(self, _):
        print('Exiting.')
        sys.exit(0)

    def get_names(self):
        return dir(self)

    def default(self, line):
        # TODO: Might need to modify approach as current approach is not
        # finding commands. See: /usr/lib/python3.4/cmd.py
        cmd_map = {
            'EOF': self.do_exit,
            'quit': self.do_exit,
        }

        command = cmd_map.get(line)
        if command is None:
            super(CLI, self).default(line)
        else:
            command(None)

    def help_exit(self):
        print('Exit.')

    def _load(self, filename):
        if os.path.isfile(filename):
            self.runner.load_nodes_from_yaml(filename)
            self.runner.load_objectives_from_yaml(filename)
            self.prompt = '{filename}> '.format(filename=filename)
            self.set_loaded_commands()
            print('Scenario loaded')
        else:
            print('Could not find {file}'.format(file=filename))

    def _load_help(self):
        print('Load a scenario from given filename.')

    def _load_complete(self, text, line, begidx, endidx):
        full_path = line[len('load '):]
        path, file_fragment = os.path.split(full_path)
        path = path or '.'
        if not os.path.isdir(path):
            return []
        else:
            possible_results = os.listdir(path)
            return [
                result for result in possible_results
                if result.startswith(text)
            ]

    def _loaded_complete(self, text, line, begidx, endidx):
        return []

    def _loaded(self, filename):
        # TODO: There should be a command to restart
        print('Scenario already loaded.')

    def _loaded_help(self):
        print('This does nothing, you are already in a scenario.')

    def set_loaded_commands(self):
        self.do_load = self._loaded
        self.help_load = self._loaded_help
        self.complete_load = self._loaded_complete
        self.do_check = self._do_check

    def _do_check(self, line):
        print(self.runner.check_for_success())

    # TODO: List nodes
    # TODO: List connections?
    # TODO: Create packets
    # TODO: Attempt validation (showing step by step what happened on failure)

if __name__ == '__main__':
    cli = CLI()
    cli.cmdloop()
